# -*- coding: utf-8 -*-
"""Makinator

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TSC5E03JAjy11CVu2-RQqukLOOqKC2U0
"""

import numpy as np
import pandas as pd
import random

df = pd.read_csv("imdb_top_1000.csv")

df['Genre'] = df['Genre'].str.replace(' ', '')
encodedGenres = df['Genre'].str.get_dummies(sep = ',')
df.drop('Genre', inplace=True, axis=1)
genres = [f"Genre_{column}" for column in encodedGenres.columns]
df[genres] = encodedGenres

def distanceFromMidpoint(n):
  return abs(n - 0.5)

def questioning():
    genres = [column for column in df if column.startswith('Genre_')]
    actors = pd.concat([df['Star1'], df['Star2'], df['Star3'], df['Star4']]).unique()
    certificates = df['Certificate'].unique()
    directors = df['Director'].unique()

    featureProbabilities = []

    actors = pd.concat([df['Star1'], df['Star2'], df['Star3'], df['Star4']]).unique()
    actorProbabilities = [len(df[(df['Star1'] == actor) | (df['Star2'] == actor) | (df['Star3'] == actor) | (df['Star4'] == actor)]) / len(df) for actor in actors]
    closestProbability = min(actorProbabilities, key = distanceFromMidpoint)
    featureProbabilities.append(closestProbability)
    actor = actors[actorProbabilities.index(closestProbability)]


    certificateProbabilities = [len(df[df['Certificate'] == certificate]) / len(df) for certificate in certificates]
    closestProbability = min(certificateProbabilities, key = distanceFromMidpoint)
    featureProbabilities.append(closestProbability)
    certificate = certificates[certificateProbabilities.index(closestProbability)]


    directorProbabilities = [len(df[df['Director'] == director]) / len(df) for director in directors]
    closestProbability = min(directorProbabilities, key = distanceFromMidpoint)
    featureProbabilities.append(closestProbability)
    director = directors[directorProbabilities.index(closestProbability)]


    genreProbabilities = [df[genre].sum() / len(df) for genre in genres]
    closestProbability = min(genreProbabilities, key = distanceFromMidpoint)
    featureProbabilities.append(closestProbability)
    genre = genres[genreProbabilities.index(closestProbability)]


    questions = [f"Is {actor} in the movie?",
                 f"Is the movie rated {certificate}?",
                 f"Is {director} the director of the movie?",
                 f"Does {genre[6:]} describe your movie?"]
    
    question = questions[featureProbabilities.index(min(featureProbabilities, key = distanceFromMidpoint))]

    index = questions.index(question)


    """
    if (index == 0):
      actors = np.delete(actors, np.argwhere(actors == actor))
    elif (index == 1):
      certificates = np.delete(certificates, np.argwhere(certificates == certificate))
    elif (index == 2):
      directors = np.delete(directors, np.argwhere(directors == director))
    else:
      genres = np.delete(genres, np.argwhere(genres == genre))
    """

    return index, question, actor, certificate, director, genre

actorsFound = 0
certificateFound = False
directorFound = False
genresFound = 0
questionsAsked = 0

while(df.shape[0] > 1):
    df = df.loc[:, (df != 0).any(axis=0)] # removes all columns that are entirely zeros

    index, question, actor, certificate, director, genre = questioning()

    if((actorsFound > 4 and index == 0) or (certificateFound and index == 1) or (directorFound and index == 2) or (genresFound > 3 and index == 3)):
        continue
    
    print(question)
    questionsAsked += 1
    user = input().lower()

    if(index == 0):
        if(user == "yes"):
            df = df[(df['Star1'] == actor) | (df['Star2'] == actor) | (df['Star3'] == actor) | (df['Star4'] == actor)]
            actorsFound += 1
        else:
            df = df[(df['Star1'] != actor) & (df['Star2'] != actor) & (df['Star3'] != actor) & (df['Star4'] != actor)]
    elif(index == 1):
        if(user == "yes"):
            df = df[df['Certificate'] == certificate]
            certificateFound = True
        else:
            df = df[df['Certificate'] != certificate]
    elif(index == 2):
        if(user == "yes"):
            df = df[df['Director'] == director]
            directorFound = True
        else:
            df = df[df['Director'] != director]
    elif(index == 3):
        if(user == "yes"):
            df = df[df[genre] == 1]
            genresFound += 1
        else:
            df = df[df[genre] != 1]
            df = df.drop(genre, axis=1)
    print(f"Possibilities left: {df.shape[0]}")
    print()


if df.empty:
    print("Movie does not exist.")
else:
    print (f"Is your movie called '{df['Series_Title'].iloc[0]}'?")

print(f"Took {questionsAsked} tries.")